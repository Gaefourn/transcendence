---
version: '3'

services:
  frontend:
    container_name: transcendence-frontend
    image: "transcendence-front:1.0.0"
    restart: always
    ports:
      - "${FRONT_PORT:-80}:3000"
      - "35729:35729"
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./app/frontend
      dockerfile: ./Dockerfile.local
    command:
      npm start
    env_file:
      - "./app/frontend/.env"
    volumes:
      - ./app/frontend:/app
      - /app/node_modules/

  database:
    container_name: transcendence-postgres
    image: "postgres:14.1-alpine"
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ".env"
    volumes:
      - "transcendence-data:/var/lib/postgresql/data"

  adminer:
    container_name: transcendance-adminer
    image: "adminer"
    restart: always
    ports:
      - "5000:8080"

  backend:
    container_name: transcendence-back
    image: "transcendence-back:1.0.0"
    restart: always
    build:
      context: ./app/backend
      dockerfile: Dockerfile.local
    depends_on:
      - database
    env_file:
      - ".env"
    command: npm run start:debug --watch
    ports:
      - "3000:3000"
    volumes:
      - ./app/backend:/app
      - /app/node_modules/
      - /app/dist/

volumes:
  transcendence-data:

networks:
  default:
